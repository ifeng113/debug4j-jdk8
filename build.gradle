plugins {
    id 'java'
    id 'com.bmuschko.docker-java-application' version '6.7.0' apply(false)          // https://github.com/bmuschko/gradle-docker-plugin/issues/1182
    id 'com.bmuschko.docker-spring-boot-application' version '6.7.0' apply(false)
}

group = 'com.k4ln'
version = '1.0-SNAPSHOT'

//configurations {
//    compileOnly {
//        extendsFrom annotationProcessor
//    }
//}

allprojects {

    apply plugin: "java"

    buildscript {
        repositories {
            maven {
                url 'https://maven.aliyun.com/repository/central'
            }
            maven {
                url 'https://maven.aliyun.com/repository/public'
            }
            maven {
                url 'https://maven.aliyun.com/repository/gradle-plugin'
            }
            maven {
                url 'https://maven.aliyun.com/repository/spring'
            }
//            mavenCentral()
        }
    }

    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/central'
        }
        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
        maven {
            url 'https://maven.aliyun.com/repository/gradle-plugin'
        }
        maven {
            url 'https://maven.aliyun.com/repository/spring'
        }
        mavenCentral()
    }

    dependencies {
        implementation 'org.projectlombok:lombok:1.18.36'       // 如果使用compileOnly会导致在运行时无法获取lombok.Generated类，使得编译源代码时找不到@Generated，导致【源码热更新】失败
        annotationProcessor 'org.projectlombok:lombok:1.18.36'

        implementation 'cn.hutool:hutool-all:5.8.34'
        implementation 'com.alibaba.fastjson2:fastjson2:2.0.53'
    }

}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}